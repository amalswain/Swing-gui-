
import static com.itextpdf.text.Annotation.URL;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import static com.itextpdf.text.pdf.PdfName.URL;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.net.URL;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.activation.DataHandler;
import javax.activation.DataSource;
import javax.activation.FileDataSource;
import javax.mail.BodyPart;
import javax.mail.Message;
import javax.mail.Multipart;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeBodyPart;
import javax.mail.internet.MimeMessage;
import javax.mail.internet.MimeMultipart;
import javax.swing.JFrame;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author ISSPL
 */
public class NewJDialog extends javax.swing.JDialog {

    /**
     * Creates new form NewJDialog
     */
    DefaultTableModel model;
    public NewJDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        model= (DefaultTableModel)jTable1.getModel();
        
        
    }
    public Object GetData(JTable table, int row_index, int col_index){
return table.getModel().getValueAt(row_index, col_index);
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jPopupMenu2 = new javax.swing.JPopupMenu();
        jPanel1 = new javax.swing.JPanel();
        combo = new javax.swing.JComboBox();
        t1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        b2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        b3 = new javax.swing.JButton();
        b4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        combo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Name", "E-mail", "Mobile" }));
        combo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboActionPerformed(evt);
            }
        });

        t1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t1ActionPerformed(evt);
            }
        });

        jLabel1.setText("SORT BY :");

        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });

        jButton1.setText("ADD");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        b2.setText("SEARCH");
        b2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b2ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Name", "E-mail", "Flat", "Mobile"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        b3.setText("SAVE AS pdf");
        b3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b3ActionPerformed(evt);
            }
        });

        b4.setText("Email");
        b4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(combo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(93, 93, 93)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(t1, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE)
                            .addComponent(jTextField3)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(b2)
                        .addGap(18, 18, 18)
                        .addComponent(b3)
                        .addGap(18, 18, 18)
                        .addComponent(b4)))
                .addContainerGap(42, Short.MAX_VALUE))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(combo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(t1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(63, 63, 63)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b3)
                    .addComponent(jButton1)
                    .addComponent(b2)
                    .addComponent(b4))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        NewJDialog1 d1= new NewJDialog1(new JFrame(),true);
        d1.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void b2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b2ActionPerformed
        int id = 0;
        String name = "";
        String mobile = "";
        String email = ""; 
        String flat = "";
        String query="";
        int a= combo.getSelectedIndex();
        switch(a){
                case 0: query= "select * from apt where name = '"+t1.getText()+"'";
                break;
                case 1: query= "select * from apt where email = "+t1.getText()+"'";
                break;
                case 2: query= "select * from apt where mobile = "+t1.getText()+"'";
                break;
        }
        Connection con;
            try{
               
              con=DBconnect.ConnectDB();
              PreparedStatement ps; 
              ps = con.prepareStatement(query);
              ResultSet rs = ps.executeQuery();
              jTable1.setModel(DbUtils.resultSetToTableModel(rs));//DbUtils.resultSetToTableModel it is a 
			  // jar file name(rs2xml) whic used to put the resultset object directly to the jTable no need of
			  //below steps
             
//             if(rs.next()){
//                    id = rs.getInt("apt_user_id");
//                    name = rs.getString("name");
//                    mobile = rs.getString("mobile");
//                    email = rs.getString("email"); 
//                    flat = rs.getString("flat");
//                    Vector v= new Vector();
//                    v.add(id);
//                    v.add(name);
//                    v.add(mobile);
//                    v.add(email);
//                    v.add(flat);
//                    System.out.println("dt"+name+"," +mobile+","+email+","+flat );
//                    model.addRow(v);
//                    
//                    
//}
             
        }catch(Exception ee){
            ee.printStackTrace();
        }
        
    }//GEN-LAST:event_b2ActionPerformed

    private void comboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboActionPerformed

    }//GEN-LAST:event_comboActionPerformed

    private void b3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b3ActionPerformed
        com.itextpdf.text.Document doc= new com.itextpdf.text.Document();
        PdfWriter writer;
        try {
            int count= jTable1.getRowCount();
            writer = PdfWriter.getInstance(doc, new FileOutputStream("report1.pdf"));
            HeaderFooter1 header= new HeaderFooter1(); 
            com.itextpdf.text.Rectangle rect = new com.itextpdf.text.Rectangle(30, 30, 550, 800);
            writer.setBoxSize(null, rect);
            writer.setPageEvent(header);
            doc.open();
            int page= writer.getPageNumber();
          
            PdfPTable tab= new PdfPTable(5);
            tab.addCell("ID");
            tab.addCell("Name");
            tab.addCell("Mobile");
            tab.addCell("E-mail");
            tab.addCell("Flat No.");
            
            for(int i=0;i<count;i++){
                Object obj= GetData(jTable1,i,0); 
                Object obj1= GetData(jTable1,i,1);
                Object obj2= GetData(jTable1,i,2);
                Object obj3= GetData(jTable1,i,3);
                Object obj4= GetData(jTable1,i,4);
                
                String value= obj.toString();
                String value1= obj1.toString();
                String value2= obj2.toString();
                String value3= obj3.toString();
                String value4= obj4.toString();
                tab.addCell(value);
                tab.addCell(value1);
                tab.addCell(value2);
                tab.addCell(value3);
                tab.addCell(value4);
                 
            }
             doc.add(tab);
             
             doc.close();
             
        } catch (DocumentException ex) {
            Logger.getLogger(NewJDialog.class.getName()).log(Level.SEVERE, null, ex);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(NewJDialog.class.getName()).log(Level.SEVERE, null, ex);
        }
      
        doc.open();
    }//GEN-LAST:event_b3ActionPerformed

    private void b4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b4ActionPerformed
       String user= "FROM@gmail.com";
       String pass= "FROMPASSWORD";
       String mailhost = "smtp.gmail.com";
       File file= createPdf();
       System.out.println("1");
       String path= file.getAbsolutePath();
        System.out.println(path);
        System.out.println(path);
       //Security.addProvider(new com.sun.net.ssl.internal.ssl.Provider());
       Properties props= System.getProperties();
          //props.setProperty("mail.transport.protocol", "smtp");
          props.setProperty("mail.smtp.host", mailhost);
          props.put("mail.smtp.auth", "true");
          props.put("mail.smtp.port", "465");
          props.put("mail.smtp.user", user);
          props.put("mail.smtp.password", pass);
          props.put("mail.smtp.starttls.enable", "true");
         props.put("mail.smtp.socketFactory.port", "465");
          props.put("mail.smtp.socketFactory.class",
          "javax.net.ssl.SSLSocketFactory");
          props.put("mail.smtp.socketFactory.fallback", "false");
          props.setProperty("mail.smtp.quitwait", "false");
          
        
        //Authenticator auth= new SMTPAuthenticator();
        Session session= Session.getDefaultInstance(props,new javax.mail.Authenticator() {
           
            @Override
            protected javax.mail.PasswordAuthentication getPasswordAuthentication(){
              return new javax.mail.PasswordAuthentication(user,pass);   
            }
        
    }); 
        
        try{
            String mess= "Successful in sending message";
            MimeMessage message= new MimeMessage(session);
            message.setFrom(new InternetAddress("FROM@gmail.com"));
            message.setRecipient(Message.RecipientType.TO, new InternetAddress("TO@gmail.com"));
            message.setSubject("Checking....");
            message.setText("Successful in sending message",user,pass);
            message.setContent(mess, "text/html; charset=utf-8");
            
            BodyPart messageBodyPart= new MimeBodyPart();
            Multipart multipart = new MimeMultipart();
            DataSource source= new FileDataSource(path);
            messageBodyPart.setDataHandler(new DataHandler(source));
            messageBodyPart.setFileName("Apartment User's Report.pdf");
            multipart.addBodyPart(messageBodyPart);
            message.setContent(multipart);
            
            Transport.send(message);
            System.out.println("Sent!");
        }catch(Exception ee){
            ee.printStackTrace();;
        }
                
    }//GEN-LAST:event_b4ActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void t1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_t1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                NewJDialog dialog = new NewJDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton b2;
    private javax.swing.JButton b3;
    private javax.swing.JButton b4;
    private javax.swing.JComboBox combo;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JPopupMenu jPopupMenu2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField t1;
    // End of variables declaration//GEN-END:variables

    private Object GetData(JTable jTable1, int i) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    private File createPdf() {
        File file = null;
        com.itextpdf.text.Document doc= new com.itextpdf.text.Document();
        PdfWriter writer;
        try {
            int count= jTable1.getRowCount();
            file= new File("report1.pdf");
            writer = PdfWriter.getInstance(doc, new FileOutputStream(file));
            HeaderFooter1 header= new HeaderFooter1(); 
            com.itextpdf.text.Rectangle rect = new com.itextpdf.text.Rectangle(30, 30, 550, 800);
            writer.setBoxSize(null, rect);
            writer.setPageEvent(header);
            doc.open();
            int page= writer.getPageNumber();
          
            PdfPTable tab= new PdfPTable(5);
            tab.addCell("ID");
            tab.addCell("Name");
            tab.addCell("Mobile");
            tab.addCell("E-mail");
            tab.addCell("Flat No.");
            
            for(int i=0;i<count;i++){
                Object obj= GetData(jTable1,i,0); 
                Object obj1= GetData(jTable1,i,1);
                Object obj2= GetData(jTable1,i,2);
                Object obj3= GetData(jTable1,i,3);
                Object obj4= GetData(jTable1,i,4);
                
                String value= obj.toString();
                String value1= obj1.toString();
                String value2= obj2.toString();
                String value3= obj3.toString();
                String value4= obj4.toString();
                tab.addCell(value);
                tab.addCell(value1);
                tab.addCell(value2);
                tab.addCell(value3);
                tab.addCell(value4);
                
            }
             doc.add(tab);
             
             doc.close();
             
             
           
        } catch (DocumentException | FileNotFoundException ex) {
            Logger.getLogger(NewJDialog.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        doc.open();
        return file;
    }

    
}
